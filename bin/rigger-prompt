#!/usr/bin/env bash

set -eo pipefail

export PROMPT_FUNCTION="text-prompt"
export QUESTION
export DEFAULT
export RETURN_VAR
export OPTIONS

function usage() {
  cat <<EOF
$0 [options]

options:
  -c              asks a choice selection style prompt
  -t              asks a text input style prompt
  -q <question>   supply the question for the question
  -d <default>    supply a default answer
  -o <options>    supply an array of options (goes with -c)
  -r <return>     set user's response in a variable

EOF
}

function choice-prompt {
  local question="${1}"
  local options=("${!2}")
  local default="${3:-1}"
  local return_var="${4}"

  local default_text="${options[$(expr ${default} - 1)]}"

  local input
  while [ -z "${input:-}" ]; do

    # prompt
    rigger-log "-> ${question} [ ${default_text} ]"

    for ((i=0; i < ${#options[@]}; i++))
    do
      echo "$(expr ${i} + 1)) ${options[$i]}"
    done

    echo -n "#? "

    # answer
    read input

    if [ -z "${input}" ]; then
      input="${default}"
    fi

    if [[ ${input:-} -le ${#options[@]} ]]; then
      eval "${return_var}=${input}"
      rigger-log warn "You chose: ${input}) ${options[$(expr ${!return_var} - 1)]}"
    else
      rigger-log warn "You chose: ${input}) which is invalid."
      input=""
    fi
  done
}

function text-prompt {
  local question="${1}"
  local return_var="${2}"
  local default="${3:-}"

  if [ -z "${!return_var:-}" ]; then

    local input

    while [ -z "${input:-}" ]; do

      if [ -z ${default} ]; then
        rigger-log "-> ${question} (no default)"
      else
        rigger-log "-> ${question} [ ${default} ]"
      fi

      read input

      [ -n "${default}" ] && break

    done

    eval "export ${return_var}=${input:-${default}}"

    echo "You chose: ${!return_var}"

  else
    rigger-log "${return_var} already set to ${!return_var}"
  fi
}

while getopts ":ctq:d:r:" opt; do
  case ${opt} in
    c)
      PROMPT_FUNCTION="choice-prompt"
      ;;
    t)
      PROMPT_FUNCTION="text-prompt"
      ;;
    q)
      QUESTION="${OPTARG}"
      ;;
    d)
      DEFAULT="${OPTARG}"
      ;;
    o)
      OPTIONS="${OPTARG}"
      ;;
    r)
      RETURN_VAR="${OPTARG}"
      ;;
    h)
      usage
      return 0
      ;;
    \?)
      usage
      return 1
      ;;
  esac
done

# Get the list of servers to act upon.
shift $(( OPTIND - 1 ));

case ${PROMPT_FUNCTION} in
  text-prompt)
    ${PROMPT_FUNCTION} "${QUESTION}" "${RETURN_VAR}" "${DEFAULT}"
    ;;
  choice-prompt)
    ${PROMPT_FUNCTION} "${QUESTION}" "${OPTIONS}" "${DEFAULT}" "${RETURN_VAR}"
    ;;
esac
